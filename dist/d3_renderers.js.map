{"version":3,"file":"d3_renderers.js","sources":["d3_renderers.coffee"],"names":[],"mappings":"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","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\"), require(\"d3\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\", \"d3\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery, d3\r\n\r\ncallWithJQuery ($, d3) ->\r\n\r\n    $.pivotUtilities.d3_renderers = Treemap: (pivotData, opts) ->\r\n        defaults =\r\n            localeStrings: {}\r\n            d3:\r\n                width: -> $(window).width() / 1.4\r\n                height: -> $(window).height() / 1.4\r\n\r\n        opts = $.extend(true, {}, defaults, opts)\r\n\r\n\r\n        result = $(\"<div>\").css(width: \"100%\", height: \"100%\")\r\n\r\n        tree = name: \"All\", children: []\r\n        addToTree = (tree, path, value) ->\r\n            if path.length == 0\r\n                tree.value = value\r\n                return\r\n            tree.children ?= []\r\n            x = path.shift()\r\n            for child in tree.children when child.name == x\r\n                addToTree(child, path, value)\r\n                return\r\n            newChild = name: x\r\n            addToTree(newChild, path, value)\r\n            tree.children.push newChild\r\n\r\n        for rowKey in pivotData.getRowKeys()\r\n            value = pivotData.getAggregator(rowKey, []).value()\r\n            if value?\r\n                addToTree(tree, rowKey, value)\r\n\r\n        color = d3.scaleOrdinal(d3.schemeCategory10)\r\n        width = opts.d3.width()\r\n        height = opts.d3.height()\r\n\r\n        treemap = d3.treemap()\r\n            .size([width, height])\r\n            .tile(d3.treemapResquarify)\r\n\r\n        root = d3.hierarchy(tree, (d) => d.children)\r\n            .sum((d) => d.value)\r\n\r\n        d3tree = treemap(root)\r\n\r\n        d3.select(result[0])\r\n            .append(\"div\")\r\n                .style(\"position\", \"relative\")\r\n                .style(\"width\", width + \"px\")\r\n                .style(\"height\", height + \"px\")\r\n            .selectAll(\".node\")\r\n            .data(d3tree.leaves())\r\n            .enter().append(\"div\")\r\n                .attr(\"class\", \"node\")\r\n                .style(\"left\", (d) => d.x0 + \"px\")\r\n                .style(\"top\", (d) => d.y0 + \"px\")\r\n                .style(\"width\", (d) => Math.max(0, d.x1 - d.x0 - 1) + \"px\")\r\n                .style(\"height\", (d) => Math.max(0, d.y1 - d.y0  - 1) + \"px\")\r\n                .style(\"background\", (d) -> if d.children? then \"lightgrey\" else color(d.data.name) )\r\n                .text( (d) -> d.data.name )\r\n\r\n        return result\r\n\r\n\r\n\r\n"]}